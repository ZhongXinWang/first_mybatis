<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration> 

 <typeAliases>
 <typeAlias alias="User"  type="com.yihaomen.mybatis.model.User"/>
 </typeAliases>
 <!-- 指定开发环境 为development
 默认的环境 ID（比如:default=”development”）。
每个 environment 元素定义的环境 ID（比如:id=”development”）。
事务管理器的配置（比如:type=”JDBC”）。
数据源的配置（比如:type=”POOLED”）。
  -->
 <environments default="development">
 <environment id="development">
 <!--
在 MyBatis 中有两种类型的事务管理器（也就是 type=”[JDBC|MANAGED]”
JDBC – 这个配置就是直接使用了 JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。
  -->
 <transactionManager type="JDBC"/>
 <!-- 指定数据源的为POOLED
 POOLED– 这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来，
 避免了创建新的连接实例时所必需的初始化和认证时间。 这是一种使得并发 Web 应用快速响应请求的流行处理方式。
 -->
 <dataSource type="POOLED">
 <!-- 指定驱动程序 -->
 <property name="drive" value="com.mysql.jdbc.Driver"/>
 <property name="url" value="jdbc:mysql://127.0.0.1:3306/mybit"/>
 <property name="username" value="root"/> 
 <property name="password" value="mysqladmin"/>
 </dataSource>
 </environment>
</environments>
<mappers>
<!-- 映射，告诉java怎么取找数据 -->
        <mapper resource="com/yihaomen/mybatis/model/User.xml"/>
        
</mappers>
</configuration>
 